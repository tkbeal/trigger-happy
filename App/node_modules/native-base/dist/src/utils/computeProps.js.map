{"version":3,"sources":["../../../src/utils/computeProps.js"],"names":["module","exports","incomingProps","defaultProps","computedProps","_","clone","children","incomingPropsStyle","style","assign","computedPropsStyle","Array","isArray","forEach","merge","StyleSheet","flatten"],"mappings":"AAAA,aACA,8B,6CACA,yC,mFAEAA,OAAOC,OAAP,CAAiB,SAASC,aAAT,CAAwBC,YAAxB,CAAsC,CAErD,GAAIC,eAAgB,EAApB,CAEAF,cAAgBG,iBAAEC,KAAF,CAAQJ,aAAR,CAAhB,CACA,MAAOA,eAAcK,QAArB,CAEA,GAAMC,oBAAqBN,cAAcO,KAAzC,CACA,MAAOP,eAAcO,KAArB,CAGA,GAAIP,aAAJ,CAAmB,CACjBG,iBAAEK,MAAF,CAASN,aAAT,CAAwBD,YAAxB,CAAsCD,aAAtC,EACD,CAFD,IAEO,CACLE,cAAgBD,YAAhB,CACD,CAED,GAAIK,kBAAJ,CAAwB,CACtB,GAAIG,oBAAqB,EAAzB,CACAP,cAAcK,KAAd,CAAsB,EAAtB,CACA,GAAIG,MAAMC,OAAN,CAAcL,kBAAd,CAAJ,CAAuC,CACrCH,iBAAES,OAAF,CAAUN,kBAAV,CAA8B,eAAS,CACrC,GAAI,MAAOC,MAAP,GAAiB,QAArB,CAA+B,CAC7BJ,iBAAEU,KAAF,CAAQJ,kBAAR,CAA4BK,wBAAWC,OAAX,CAAmBR,KAAnB,CAA5B,EACD,CAFD,IAEO,CACLJ,iBAAEU,KAAF,CAAQJ,kBAAR,CAA4BF,KAA5B,EACD,CACF,CAND,EAOD,CARD,IAQO,IAAI,MAAOD,mBAAP,GAA8B,QAAlC,CAA4C,CACjDG,mBAAqBK,wBAAWC,OAAX,CAAmBT,kBAAnB,CAArB,CACD,CAFM,IAEA,CACLG,mBAAqBH,kBAArB,CACD,CAEDH,iBAAEU,KAAF,CAAQX,cAAcK,KAAtB,CAA6BN,aAAaM,KAA1C,CAAiDE,kBAAjD,EACD,CAED,MAAOP,cAAP,CACD,CAtCD","file":"computeProps.js","sourcesContent":["\"use_strict\";\nimport _ from \"lodash\";\nimport { StyleSheet } from \"react-native\";\n\nmodule.exports = function(incomingProps, defaultProps) {\n  // External props has a higher precedence\n  let computedProps = {};\n\n  incomingProps = _.clone(incomingProps);\n  delete incomingProps.children;\n\n  const incomingPropsStyle = incomingProps.style;\n  delete incomingProps.style;\n\n  // console.log(defaultProps, incomingProps);\n  if (incomingProps) {\n    _.assign(computedProps, defaultProps, incomingProps);\n  } else {\n    computedProps = defaultProps;\n  }\n  // Pass the merged Style Object instead\n  if (incomingPropsStyle) {\n    let computedPropsStyle = {};\n    computedProps.style = {};\n    if (Array.isArray(incomingPropsStyle)) {\n      _.forEach(incomingPropsStyle, style => {\n        if (typeof style === \"number\") {\n          _.merge(computedPropsStyle, StyleSheet.flatten(style));\n        } else {\n          _.merge(computedPropsStyle, style);\n        }\n      });\n    } else if (typeof incomingPropsStyle === \"number\") {\n      computedPropsStyle = StyleSheet.flatten(incomingPropsStyle);\n    } else {\n      computedPropsStyle = incomingPropsStyle;\n    }\n\n    _.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n  // console.log(\"computedProps \", computedProps);\n  return computedProps;\n};\n"]}